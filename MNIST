import tensorflow as tf
from tensorflow.keras.datasets import mnist
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense,Flatten
from tensorflow.keras.utils import to_categorical
import matplotlib.pyplot as plt


(x_train, y_train), (x_test, y_test) = mnist.load_data()

x_train=x_train/255.0
x_train=x_test/255.0

y_train=to_categorical(y_train, 10)
y_test=to_categorical(y_test, 10)

model=Sequential([
    Flatten(input_shape=(28, 28)),
    Dense(128, activation='relu'),
    Dense(10, activation='softmax')
])

#Compile the model
model.compile(optimizer='adam',
              loss='categorical_crossentropy',
              metrics=['accuracy'])

#Train the model
model.fit(x_train, y_train, epochs=5, batch_size=32, validation_split=0.2)

#Evaluate the model
test_loss, test_acc=model.evaluate(x_test, y_test)
print("\nTest accuracy:", test_acc)

#Predict on test set and show a sample

import numpy as np
predictions=model.predict(x_test)
index=np.random.randint(0, len(x_test))
plt.imshow(x_test[index], cmap='gray')
plt.title(f"Predicted: {np.argmax(predictions[index])}")
plt.axis("off")
plt.show()
